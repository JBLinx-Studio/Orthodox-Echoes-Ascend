
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate timestamp for cache busting
        run: |
          echo "DEPLOY_TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
          echo "Generating cache buster: ${{ env.DEPLOY_TIMESTAMP }}"
        
      - name: Build
        run: npm run build
        env:
          # Add enhanced cache busting with both timestamp and commit hash
          VITE_CACHE_BUSTER: ${{ github.sha }}_${{ github.run_number }}_${{ env.DEPLOY_TIMESTAMP }}
        
      # Create 404.html for SPA routing
      - name: Create 404.html
        run: |
          cat > ./dist/404.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Orthodox Echoes - Page Not Found</title>
              <script type="text/javascript">
                var pathSegmentsToKeep = 1;
                var l = window.location;
                l.replace(
                  l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') +
                  l.pathname.split('/').slice(0, 1 + pathSegmentsToKeep).join('/') + '/?/' +
                  l.pathname.split('/').slice(1 + pathSegmentsToKeep).join('/').replace(/&/g, '~and~') +
                  (l.search ? '&' + l.search.slice(1).replace(/&/g, '~and~') : '') +
                  l.hash
                );
              </script>
            </head>
            <body>
              <h2>Redirecting...</h2>
            </body>
          </html>
          EOL
      
      # Update index.html for SPA routing
      - name: Update index.html for SPA
        run: |
          sed -i '/<head>/a \
          <!-- Start Single Page Apps for GitHub Pages --> \
          <script type="text/javascript"> \
            (function(l) { \
              if (l.search[1] === "/" ) { \
                var decoded = l.search.slice(1).split("&").map(function(s) { \
                  return s.replace(/~and~/g, "&"); \
                }).join("?"); \
                window.history.replaceState(null, null, \
                    l.pathname.slice(0, -1) + decoded + l.hash \
                ); \
              } \
            }(window.location)) \
          </script> \
          <!-- End Single Page Apps for GitHub Pages -->' ./dist/index.html
      
      # Create a .nojekyll file to prevent Jekyll processing
      - name: Create .nojekyll file
        run: touch ./dist/.nojekyll
        
      # Add cache-busting timestamp to index.html
      - name: Add cache-busting markers
        run: |
          # Add timestamp to index.html
          echo "<!-- Deploy timestamp: $(date +%s) - $(date) -->" >> ./dist/index.html
          
          # Add cache busting meta tag
          sed -i '/<head>/a \
          <meta name="deploy-version" content="${{ github.sha }}_${{ github.run_number }}_${{ env.DEPLOY_TIMESTAMP }}">' ./dist/index.html
        
      # Force clear of any previous cache
      - name: Clear caches in gh-pages branch if it exists
        continue-on-error: true
        run: |
          git fetch origin gh-pages || echo "No gh-pages branch found"
          git checkout gh-pages || echo "Could not switch to gh-pages branch"
          if [ -d ".cache" ]; then
            rm -rf .cache
            echo "Cleared existing cache directory"
          fi
          git checkout ${GITHUB_SHA}
        
      # Deploy with force option to ensure changes take effect
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          clean: true
          clean-exclude: |
            .nojekyll
          force: true
          commit-message: "Deploy website with cache buster: ${{ env.DEPLOY_TIMESTAMP }}"

      # Verify deployment status
      - name: Verify deployment
        run: |
          echo "Deployment completed at $(date)"
          echo "Cache buster: ${{ env.DEPLOY_TIMESTAMP }}"
          echo "GitHub SHA: ${{ github.sha }}"
          echo "Run number: ${{ github.run_number }}"
