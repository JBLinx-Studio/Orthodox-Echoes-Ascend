{"version":3,"file":"motion.C7OBX4bM_82c42fc21f7748aa1b8e9bbd797d2e444bd053ca_36_1746742464.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/driver-frameloop.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForced = false) {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForced);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            else {\n                this.keyframeResolver?.cancel();\n            }\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        this.animation.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.9.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.9.2\", `Attempting to mix Motion versions ${nextValue.version} with 12.9.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","parent","offsetParent","parentWidth","HTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","id","useId","nonce","useContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","React.useEffect","Provider","value","Map","usePresence","subscribe","safeToRemove","useCallback","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","has","isEveryExitComplete","isExitComplete","addUniqueItem","arr","item","indexOf","removeItem","index","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isZeroValueString","memo","callback","result","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","subscriptions","add","handler","notify","c","numSubscriptions","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","step","schedule","keepAlive","immediate","queue","cancel","process","frameData","frameloop","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","getAnimatableNone","parsed","transformer","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","count","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","_bbox","bottom","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","visualElement","getValue","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","oncancel","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","super","sampleAnimation","setWithVelocity","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","microtask","cancelMicrotask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","MotionValue","version","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","getValueAsType","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","visualState","externalRef","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","scaleCorrectors","isForcedMotionValue","isMotionValue","translateAlias","numTransforms","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","getValueState","resolveVariantFromProps","resolveMotionValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","newValues","liveStyle","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","toUpperCase","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252]}